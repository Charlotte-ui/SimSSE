
@charset "UTF-8";
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();
@include mat.core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/



$SimSSE-primary: mat.define-palette( (
  50: #FBF0EE,
  100: #F3D3CD,
  200: #EBB6AD,
  300: #E3998C,
  400: #DB7C6B,
  500: #D35F4A,
  600: #C54630,
  700: #A43A28,
  800: #832F20,
  900: #632318,
  contrast: (
    50: rgba(black, 1),
    100: rgba(black, 1),
    200: rgba(black, 1),
    300: rgba(black, 1),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
 ));
$SimSSE-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$SimSSE-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$SimSSE-theme: mat.define-light-theme((
  color: (
    primary: $SimSSE-primary,
    accent: $SimSSE-accent,
    warn: $SimSSE-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-legacy-component-themes($SimSSE-theme);

